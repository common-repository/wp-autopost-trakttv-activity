<?php


function wata_set_css_form ($input_id, $action) {
	if ($action == "validate" || $action == "invalidate") {
		echo '<script type="text/javascript">jQuery(function ($) {$(document).ready(function(){$("#'.$input_id.'").wata_js_'.$action.'();});});</script>';
	}
}



// explain well what each variable are and how to get them

$plugin_url = "http://wordpress.org/plugins/wp-autopost-trakttv-activity";
$img_url = plugins_url( 'images/eye-logo.png', __FILE__ );

		$fields = array(
			"tuser" => array(
				"name" => "trakt.tv username",
				"post" => "wata_tuser",
				"default" => "",
				"current" => "",
				"required" => "yes",
				"type" => "free"
				),					
			"apikey" => array(
				"name" => "trakt.tv apikey",
				"post" => "wata_apikey",
				"default" => "",
				"current" => "",
				"required" => "yes",
				"type" => "free"
				),
			"first_date" => array(
				"name" => "trakt.tv first avtivity date",
				"post" => "wata_first_date",
				"default" => "2014-01-01",
				"current" => "",
				"required" => "no",
				"type" => "date"
				),
			"fanart_as_post_featured_image" => array(
				"name" => "fanart as post featured image",
				"post" => "wata_fanart_as_post_featured_image",
				"default" => "yes",
				"current" => "",
				"required" => "no",
				"type" => array("yes","no")
				),
			"post_status" => array(
				"name" => "post status",
				"post" => "wata_post_status",
				"default" => "publish",
				"current" => "",
				"required" => "no",
				"type" => array("draft","publish","pending","private")
				),
			"authorid" => array(
				"name" => "author id",
				"post" => "wata_authorid",
				"default" => 1,
				"current" => "",
				"required" => "no",
				"type" => "integer"
				),
			"post_date" => array(
				"name" => "post date",
				"post" => "wata_post_date",
				"default" => "new",
				"current" => "",
				"required" => "no",
				"type" => array("new","original")
				),
			"post_categories" => array(
				"name" => "post categories",
				"post" => "wata_post_categories",
				"default" => "",
				"current" => "",
				"required" => "no",
				"type" => "integerANDcomma"
				),
			"post_tags" => array(
				"name" => "post tags",
				"post" => "wata_post_tags",
				"default" => "",
				"current" => "",
				"required" => "no",
				"type" => "integerANDcomma"
				),
			"post_title_template" => array(
				"name" => "post title template",
				"post" => "wata_post_title_template",
				"default" => "{{movie_title}} ({{movie_year}})",
				"current" => "",
				"required" => "no",
				"type" => "html"
				),
			"post_content_template" => array(
				"name" => "post content template",
				"post" => "wata_post_content_template",
				"default" => '<div class="alignleft" style="position:relative; width:200px; height:300px; margin-right:20px; margin-bottom:20px"><img class="" alt="" src="{{movie_poster_url}}" width="200" height="300"/><div style="width:100%; height: 29px; position: absolute; top: 271px; left: 0px; background-color:#4DBCE9; margin: 0px; padding:0px; border: 0px;  color:#FFF;"><img src="'.$img_url.'" alt="" width="27" height="16" class="" style="padding-left: 7px; padding-top:7px; float:left;" /><div style="font-size: 16px; line-height: 29px; padding-left:51px;">{{movie_watch_date}}, {{movie_watch_time}}</div></div><div style="position:absolute; right:0px; top:0px"><img class="size-full" src="http://slurm.trakt.us/images/ratings/badge-{{movie_personnal_advanced_rating}}@2x.2.png" alt="" /></div></div><div id="wata_seen">{{movie_watch_date}}, {{movie_watch_time}} --- {{movie_personnal_advanced_rating}}/10</div>I watched <a href="{{movie_trakt.tv_url}}">{{movie_title}} ({{movie_year}})</a> and rated it  {{movie_personnal_advanced_rating}}/10<blockquote>{{movie_overview}}</blockquote></br>{{movie_embed_trailer}}</br>',
				"current" => "",
				"required" => "no",
				"type" => "html"
				),
			"post_signature_option" => array(
				"name" => "post signature option",
				"post" => "wata_post_signature_option",
				"default" => "",
				"current" => "",
				"required" => "no",
				"type" => "checked"
				),
			"post_signature_template" => array(
				"name" => "post signature template",
				"post" => "wata_post_signature_template",
				"default" => '<i>This post has been automatically generated by <a href="'.$plugin_url.'">wp autopost trakt.tv activity</a> wordpress plugin with data coming from <a href="http://trakt.tv">trakt.tv</a></i>',
				"current" => "",
				"required" => "no",
				"type" => "html"
				),
			"post_excerpt_template" => array(
				"name" => "post excerpt template",
				"post" => "wata_post_excerpt_template",
				"default" => "",
				"current" => "",
				"required" => "no",
				"type" => "html"
				),
			"movie_featuring_tag" => array(
				"name" => "movie featuring tag",
				"post" => "wata_movie_featuring_tag",
				"default" => "",
				"current" => "",
				"required" => "no",
				"type" => "integer"
				),
			"movie_featured_number" => array(
				"name" => "movie featured number",
				"post" => "wata_movie_featured_number",
				"default" => 6,
				"current" => "",
				"required" => "no",
				"type" => "integer"
				)
		);


	// Check variable from POST
	$error = array();
	$error_empty = array();
	$error_format = array();

	if($_SERVER['REQUEST_METHOD'] == "POST") {

		if($_POST['wata_hidden'] == 'Y') {

	//    		die("Error: Wrong method");
	//	} else  {

			//Check for empty post values for required variables
			foreach ($fields as $key => $value) {
				if ($value['required'] == "yes") {
					if(empty($_POST[$value['post']])) {
						$error_empty[] = $value['post'];
					}
				}
			}

			//Check types
			foreach ($fields as $key => $value) {
				if(!empty($_POST[$value['post']])) {
					if ($value['type'] == "date") {
						list($y, $m, $d) = explode('-', $_POST[$value['post']]);
						if(!checkdate($m, $d, $y)){
							$error_format[] = $value['post'];
						} 
					} elseif (is_array ( $value['type'] )) {
						if (!in_array ($_POST[$value['post']], $value['type'])) {
							$error_format[] = $value['post'];
						}
					} elseif ($value['type'] == "integer") {
						if (!ctype_digit($_POST[$value['post']])) {
							$error_format[] = $value['post'];
						}
					} elseif ($value['type'] == "integerANDcomma") {
						$string = preg_replace('/\s+/', '', $_POST[$value['post']]);
						$array = explode(',', $string);
						foreach ($array as $value2) {
							if (!ctype_digit($value2) && $value2 != "") {
								$error_format[] = $value['post'];
								break;
							}
						}
					} elseif ($value['type'] == "checked" && $_POST[$value['post']] != "checked") {
						$error_format[] = $value['post'];
					}
				}
			}// end of foreach loop to check type

			//check for variable content
	  		if(!empty($_POST['wata_tuser'])) {

				// Check if trakt.tv username does exists
				$request='http://api.trakt.tv/search/users.json/caf4e8746b0475d17dd8e1aa7c262706?query='.$_POST['wata_tuser'];
				$contents = file_get_contents($request);
				$json_decoded = json_decode($contents, true);

				$output = "invalid";

				foreach ($json_decoded as $result) {
					if ($result['username'] == $_POST['wata_tuser']) {
						$output = "valid";
						break;
			   		}
				}

				if ($output == "invalid") {
					$error[] = 'wata_tuser';
				} else {
	  				if(!empty($_POST['wata_apikey'])) {
						// Check if trakt.tv apikey is valid
						$request='http://api.trakt.tv/search/users.json/'.$_POST['wata_apikey'].'?query='.$_POST['wata_tuser'];
						$contents = file_get_contents($request);
						$json_decoded = json_decode($contents, true);

						$output2 = "invalid";

						foreach ($json_decoded as $result) {
							if ($result['username'] == $_POST['wata_tuser']) {
								$output2 = "valid";
								break;
					   		}
						}

						if ($output2 == "invalid") {
							$error[] = 'wata_apikey';
						}
					}
				}

			}// end of if(!empty($_POST['wata_tuser']))

			if(!empty($_POST['wata_authorid'])) {// check if id exists
				$int = (int)$_POST['wata_authorid'];
				if (!get_user_by('id', $int)) {
					$error[] = 'wata_authorid';
				}
			}

			if(!empty($_POST['wata_post_categories'])) {// check if post categories exists
				$string = preg_replace('/\s+/', '', $_POST['wata_post_categories']);//remove whitespace
				$array = explode(',', $string);
				foreach ($array as $value) {
					$term = get_term( $value, 'category' );
					if ($term == null) {
						$error[] = 'wata_post_categories';
						break;
					}
				}
			}

			if(!empty($_POST['wata_post_tags'])) {// check if post tags exists
				$string = preg_replace('/\s+/', '', $_POST['wata_post_tags']);//remove whitespace
				$array = explode(',', $string);
				foreach ($array as $value) {
					$term = get_term( $value, 'post_tag' );
					if ($term == null) {
						$error[] = 'wata_post_tags';
						break;
					}
				}
			}

			if(!empty($_POST['wata_movie_featuring_tag'])) {// check if movie featuring tag exists
				$int = (int)$_POST['wata_movie_featuring_tag'];
				$term = get_term( $int, 'post_tag' );
				if ($term == null) {
					$error[] = 'wata_movie_featuring_tag';
				}
			}


			// Print error results or get post data
			if ($error != null || $error_empty != null || $error_format != null) {

				foreach ($fields as $value) {
					wata_set_css_form ($value['post'], 'validate');
					foreach ($error_empty as $value2) {
						wata_set_css_form ($value2, 'invalidate');
					}
					foreach ($error_format as $value2) {
						wata_set_css_form ($value2, 'invalidate');
					}

					foreach ($error as $value2) {
						wata_set_css_form ($value2, 'invalidate');
					}
				}

				?>
				<div class="error"><p><strong>Error(s): Options not saved</strong></p></div>
				<?php

			} else {

			// Get variable from POST

				foreach ($fields as $key => $value) {
					$post_value = $_POST[$value['post']];
					$post_value_v2 = stripslashes ($post_value);
					update_option($value['post'], $post_value_v2);
					wata_set_css_form ($value['post'], 'validate');
				}

				?>
				<div class="updated"><p><strong>Options saved</strong></p></div>
				<?php

			}//end of if error

		}// end of if $_POST['wata_hidden'] == 'Y'


		if($_POST['wata_hidden2'] == 'Y') {
			//Form data sent
			delete_option( 'wata_lasttimestamp' );
			delete_option( 'wata_featured_movies' );
			//delete_option( 'wata_post_content_template' );
			?>
			<div class="updated"><p><strong>Trakt.tv Activity History Erase (only the wata_lasttimestamp option, not the posts) and Automatic Featured Movies List</strong></p></div>
			<?php
		} 

		if($_POST['wata_hidden3'] == 'Y') {
			//Launch script manually
			wata_plugin_launch();
			?>
			<div class="updated"><p><strong>Script launched</strong></p></div>
			<?php
		} 

	}// end of if($_SERVER['REQUEST_METHOD'] == "POST")


        // Set current variables
	foreach ($fields as $key => $value) {
		if ($error != null || $error_empty != null || $error_format != null) {
			$post_value = $_POST[$value['post']];
			$post_value_v2 = stripslashes ($post_value);
			$fields[$key]["current"] = $post_value_v2;
		} elseif (!get_option($value['post'])) {
			$fields[$key]["current"] = $fields[$key]["default"];
		} else {
			$fields[$key]["current"] = get_option($value['post']);
		}
	}


	// Normal page display
	?>
<script type="text/javascript">
var pluginsUrl = "<?php echo plugins_url() ?>";
</script>


<div class="wrap">

    <form name="wata_form" class="contact_form" method="post" action="<?php echo str_replace( '%7E', '~', $_SERVER['REQUEST_URI']); ?>">

	<h2>wp autopost trakt.tv activity Options</h2>
	<span class="required_notification">* Denotes Required Field</span>

        <input type="hidden" name="wata_hidden" id="wata_hidden" value="Y">

        <h4>Trakt.tv account Settings</h4>
	<ul>
		<li>
			<label for="wata_tuser">Username:</label>
			<input type="text" name="wata_tuser" id="wata_tuser" value="<?php   echo $fields['tuser']['current'];?>" placeholder="<?php   echo $fields['tuser']['current'];?>" size="20" required>
			<span class="form_hint">Can be found at http://trakt.tv/settings</span>






			<span id="test" style="display: none">Test</span>





		</li>

		<li>
			<label for="wata_apikey">API key:</label>
			<input type="text" name="wata_apikey" id="wata_apikey" value="<?php   echo $fields['apikey']['current'];?>" placeholder="<?php   echo $fields['apikey']['current'];?>" size="40" required>
			<span class="form_hint">Can be found at http://trakt.tv/settings/api</span>
		</li>
	</ul>
        <hr />

        <h4>Trakt.tv data to import</h4>
	<ul>
		<li>
       			<label for="wata_first_date">Start date for first run:</label>
			<input type="text" name="wata_first_date" id="wata_first_date" value="<?php   echo $fields['first_date']['current'];?>" size="10" required>
			<span class="form_hint">Proper format: "YYYY-MM-DD"</span>
		</li>
	</ul>
        <hr />

        <h4>Posts Options</h4>
	<ul>
		<li>
			<label for="wata_post_status">Posts status:</label>
			<select name="wata_post_status" id="wata_post_status" value="<?php   echo $fields['post_status']['current'];?>" size="1" required>
				<?php
				foreach ($fields['post_status']['type'] as $value) {
					echo '<option value="'.$value.'" ';
					if ($value == $fields['post_status']['current']) {
						echo 'selected';
					}
					echo '>'.$value.'</option>';
				}
				?>
			</select> 
		</li>

		<li>
			<label for="wata_authorid">Posts author:</label>
			<input type="text" name="wata_authorid" id="wata_authorid" value="<?php   echo $fields['authorid']['current'];?>" size="3" required>
			<span class="form_hint">Proper format: "Author ID" (integer)</span>
		</li>

		<li>
			<label for="wata_post_date">Posts date:</label> 
			<select name="wata_post_date" id="wata_post_date" value="<?php   echo $fields['post_date']['current'];?>" size="1" required>
				<?php
				foreach ($fields['post_date']['type'] as $value) {
					echo '<option value="'.$value.'" ';
					if ($value == $fields['post_date']['current']) {
						echo 'selected';
					}
					echo '>'.$value.'</option>';
				}
				?>
			</select>
			<span class="form_hint">"original": date of the initial scrobling to trakt, "new": default post date (date of the creation fo the post)</span>
		</li>

		<li>
			<label for="wata_post_categories">Posts categories id:</label> 
			<input type="text" name="wata_post_categories" id="wata_post_categories" value="<?php   echo $fields['post_categories']['current'];?>" size="20"/>
			<span class="form_hint">Proper format: "category ID" (integer) separated by comma (ex: 12,8)</span>
		</li>

		<li>
			<label for="wata_post_tags">Posts tags:</label> 
			<input type="text" name="wata_post_tags" id="wata_post_tags" value="<?php   echo $fields['post_tags']['current'];?>" size="20">
			<span class="form_hint">Proper format: tag ID (integer) separated by comma (ex: 12,8)</span>
		</li>

		<li>
			<label for="wata_fanart_as_post_featured_image">Fanart as Post Featured image:</label>
			<select name="wata_fanart_as_post_featured_image" id="wata_fanart_as_post_featured_image" value="<?php   echo $fields['fanart_as_post_featured_image']['current'];?>" size="1" required>
				<?php
				foreach ($fields['fanart_as_post_featured_image']['type'] as $value) {
					echo '<option value="'.$value.'" ';
					if ($value == $fields['fanart_as_post_featured_image']['current']) {
						echo 'selected';
					}
					echo '>'.$value.'</option>';
				}
				?>
			</select> 
		</li>
	</ul>
        <hr />

        <h4>Featuring Options</h4>
	<ul>
		<li>
			<label for="wata_movie_featuring_tag">Featuring tag:</label>
			<input type="text" name="wata_movie_featuring_tag" id="wata_movie_featuring_tag" value="<?php   echo $fields['movie_featuring_tag']['current'];?>" size="8">
			<span class="form_hint">Proper format: unique tag ID (integer)</span>
		</li>

		<li>
			<label for="wata_movie_featured_number">Number of featured post:</label>
			<input type="text" name="wata_movie_featured_number" id="wata_movie_featured_number" value="<?php   echo $fields['movie_featured_number']['current'];?>" size="2"> 
			<span class="form_hint">This number is specific to your theme</span>
		</li>
	</ul>
        <hr />

        <h4>Post Templates</h4>
		<p>You can use following codes to add dynamic content to your post:</ br>{{movie_title}} {{movie_year}} {{movie_imdb_id}} {{movie_trakt.tv_url} {{movie_fanart_url}} {{movie_poster_url}} {{movie_overview}} {{movie_embed_trailer}} {{movie_watch_date}} {{movie_watch_time}} {{movie_personnal_rating}} {{movie_personnal_advanced_rating}}
		<p>
	<ul>
		<li>
        		<label for="wata_post_title_template">Post title template (in html):</label> 
			<textarea name="wata_post_title_template" id="wata_post_title_template" rows="4" cols="100" required><?php   echo $fields['post_title_template']['current'];?></textarea>
		</li>

		<li>
        		<label for="wata_post_excerpt_template">Post excerpt template (in html):</label>
			<textarea name="wata_post_excerpt_template" id="wata_post_excerpt_template" rows="8" cols="100"><?php   echo $fields['post_excerpt_template']['current'];?></textarea>
		</li>

		<li>
        		<label for="wata_post_content_template">Post content template (in html):</label> 
			<textarea name="wata_post_content_template" id="wata_post_content_template" rows="20" cols="100" required><?php   echo $fields['post_content_template']['current'];?></textarea>
		</li>
	</ul>
        <hr />

        <h4>Post signature option</h4>
	<ul>
		<li>
			<input type="checkbox" name="wata_post_signature_option" id="wata_post_signature_option" value="checked" <?php   echo $fields['post_signature_option']['current'];?>/>
			<label for="wata_post_signature_template">Add custom signature to each post (in html):</label>
			<textarea name="wata_post_signature_template" id="wata_post_signature_template" rows="8" cols="100" <?php   if ($fields['post_signature_option']['current'] != "checked") {echo "disabled";}?>><?php   echo $fields['post_signature_template']['current'];?></textarea>
		</li>
	</ul>
        <hr />

        <p class="submit">
        <input type="submit" name="Submit" value="Update Options" />
        </p>
    </form>


  <form name="wata_form_erase" class="contact_form" method="post" action="<?php echo str_replace( '%7E', '~', $_SERVER['REQUEST_URI']); ?>">

        <input type="hidden" name="wata_hidden2" value="Y">
        <p class="submit"> This plugin keep an history of the trakt activities treated. If you need to delete this history in order to reimport your activity, you can press this button. Don't forget to also delete individual post if you want them to be created again. </ br>
        <input type="submit" name="Submit" value="Erase History" />
        </p>
  </form>


  <form name="wata_plugin_run" class="contact_form" method="post" action="<?php echo str_replace( '%7E', '~', $_SERVER['REQUEST_URI']); ?>">

        <input type="hidden" name="wata_hidden3" value="Y">
        <p class="submit"> This plugin launch automatically 2 times per day and is limited to 10 new posts per run. If you can't wait you can launch it manually by clicking here:</ br>
        <input type="submit" name="Submit" value="Launch script" />
        </p>
  </form>

</div>


